// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Sender {
  user
  ai
}

model User {
  id  Int @id @default(autoincrement())
  username String @db.VarChar(100)
  password String @db.VarChar(100)
  name String @db.VarChar(100)
  token String? @db.VarChar(100) 
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt
  
  chat_session ChatSession[]

  @@map("users")
}

model ChatSession {
  id Int @id @default(autoincrement())
  title String @db.VarChar(100)
  is_active Boolean @default(true)
  created_at DateTime @default(now())
  user_id Int 

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  chat Chat[]

  @@map("chat_sessions")
}

model Chat {
  id Int @id @default(autoincrement())
  sender Sender
  message String @db.Text
  created_at DateTime @default(now())
  session_id Int

  chatSession ChatSession @relation(fields: [session_id], references: [id], onDelete: Cascade)

  @@map("chats")
}
